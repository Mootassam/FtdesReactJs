{"version":3,"file":"static/js/3240.65e65b48.chunk.js","mappings":"6OAIqBA,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAkChB,OAlCgBA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,wBAAAA,M,yCAEjB,kGACUC,EAAWC,EAAAA,EAAAA,MADrB,SAG2BC,EAAAA,EAAAA,IAAA,kBAAyBF,EAAzB,iBAH3B,cAGUG,EAHV,yBAIWA,EAASC,MAJpB,6F,IAAA,iFAOA,WAAwCC,GAAxC,qFACUL,EAAWC,EAAAA,EAAAA,MADrB,SAG2BC,EAAAA,EAAAA,IAAA,kBAAyBF,EAAzB,uBAAgDK,IAH3E,cAGUF,EAHV,yBAIWA,EAASC,MAJpB,8FAPA,IAOA,wEAOA,WAA+BE,GAA/B,qFACUN,EAAWC,EAAAA,EAAAA,MADrB,SAG2BC,EAAAA,EAAAA,IAAA,kBAAyBF,EAAzB,uBAAgDM,IAH3E,cAGUH,EAHV,yBAIWA,EAASC,MAJpB,8FAPA,I,sBAgBA,SAAgBG,GACZ,IAAIC,EAAID,EAAKE,MAAM,KAAK,GACxB,OAAOC,IAAOF,GAAGG,OAAO,KAC3B,wBACD,SAAeH,GACX,cAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAGC,MAAM,KAAK,EACzB,wBACD,SAAeD,GACX,cAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAGC,MAAM,KAAK,EACzB,OAlCgBV,E,qMCQN,SAASa,IACpB,IACIC,GADWC,EAAAA,EAAAA,MACIC,YAEnB,OAAQF,GACJ,IAAK,SACDA,EAAQ,SACR,MACJ,IAAK,gBACDA,EAAQ,eACR,MACJ,IAAK,WACDA,EAAQ,UAMhB,IAAMG,EAAc,wBAAoBH,GAExC,GAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KAcA,OAFAC,EAAAA,EAAAA,YAAU,YAVgB,SAAAN,GACtBjB,EAAAA,EAAAA,2BAA8CiB,GACzCO,MAAK,SAACC,GAAW,IAAD,EACb,UAAAA,EAAMC,YAAN,SAAYC,KAAI,SAAAC,GACZR,GAAY,SAAAD,GAAQ,OAAIA,EAASU,OAAOD,EAApB,GACvB,IACDN,GAAmB,EACtB,GACR,CAEiBQ,CAAkBb,EAAiB,GAAE,KAGnD,8BACI,gBAAKc,UAAU,eAAf,UACI,qBAASA,UAAU,cAAnB,WACI,wBAAKjB,KACL,SAAC,IAAD,CAAakB,KAAM,wBAAoBlB,IAEnCO,GAEI,UAACY,EAAD,YACI,SAAC,IAAD,CAAUC,OAAQ,IAAKC,MAAO,OAC9B,SAAC,IAAD,CAAUD,OAAQ,IAAKC,MAAO,OAC9B,SAAC,IAAD,CAAUD,OAAQ,IAAKC,MAAO,OAC9B,SAAC,IAAD,CAAUD,OAAQ,IAAKC,MAAO,UAGlC,SAACC,EAAD,iBAEQjB,QAFR,IAEQA,OAFR,EAEQA,EAAUQ,KAAI,SAACU,EAAKC,GAChB,OACI,SAAC,IAAD,CAAgBC,WAAYF,GAAUC,EAG7C,YAQpC,CAGD,IAAML,EAAoBO,EAAAA,GAAAA,QAAH,mQAejBJ,EAAaI,EAAAA,GAAAA,QAAH,+O,oJCvFD,SAASC,EAAT,GAAyC,IAAD,EAAdF,EAAc,EAAdA,WAOrC,OACI,UAACG,EAAD,CAAyCX,UAAU,oBAAnD,WAES,UAAAQ,EAAWI,cAAX,eAAmBC,QAAS,GAEzB,gBAAKb,UAAU,gBAAgBc,MAAO,CAAEC,gBAAiB,OAASP,EAAWI,OAAO,GAAGI,YAAc,KAArG,UACI,SAAC,IAAD,CAAoB1C,KAAMkC,EAAYS,OAAO,sBAGjD,gBAAKjB,UAAU,+BAAf,UACI,SAAC,IAAD,CAAoB1B,KAAMkC,EAAYS,OAAO,sBAGzD,iBAAKjB,UAAU,cAAf,WACI,iBAAKA,UAAU,cAAf,WACI,SAAC,MAAD,CAAmBA,UAAU,SAC5BQ,EAAWU,SAEhB,iBAAMlB,UAAU,cAAhB,SAvBK,SAAAvB,GACb,IAAIC,EAAID,EAAKE,MAAM,KAAK,GACxB,OAAOC,IAAOF,GAAGG,OAAO,KAC3B,CAqBgBsC,CAASX,EAAWY,iBAG7B,gBAAKpB,UAAU,sBAAf,UACI,0BAAOQ,EAAWa,cAtBDb,EAAWc,IA0B3C,CAED,IAAMX,EAAqBF,EAAAA,GAAAA,IAAH,2tD,+ICrCT,SAASc,EAAT,GAA+C,IAAjBjD,EAAgB,EAAhBA,KAAM2C,EAAU,EAAVA,OAC/C,OACI,2BAEmB,SAAXA,IACA,SAAC,KAAD,CAAMO,GAAI,uBAAyBlD,EAAKgD,IAAxC,UACI,SAACG,EAAD,UAEQ,CACIC,QACI,SAAC,MAAD,IAEJC,QACI,SAAC,MAAD,IAEJC,cACI,SAAC,MAAD,IAEJhB,QACI,SAAC,MAAD,IAEJiB,SACI,SAAC,MAAD,KAENvD,EAAK4C,UAMR,KAAXD,IACA,SAAC,KAAD,CAAMO,GAAI,uBAAyBlD,EAAKgD,IAAxC,UACI,SAACQ,EAAD,UAEQ,CACIJ,QACI,SAAC,MAAD,IAEJC,QACI,SAAC,MAAD,IAEJC,cACI,SAAC,MAAD,IAEJhB,QACI,SAAC,MAAD,IAEJiB,SACI,SAAC,MAAD,KAENvD,EAAK4C,UAMR,mBAAXD,IACA,SAAC,KAAD,CAAMO,GAAI,uBAAyBlD,EAAKgD,IAAxC,UACI,SAACS,EAAD,UAEQ,CACIL,QACI,SAAC,MAAD,IAEJC,QACI,SAAC,MAAD,IAEJC,cACI,SAAC,MAAD,IAEJhB,QACI,SAAC,MAAD,IAEJiB,SACI,SAAC,MAAD,KAENvD,EAAK4C,YAOlC,CAGD,IAAMY,EAAgBrB,EAAAA,GAAAA,IAAH,2SAgBbgB,EAA0BhB,EAAAA,GAAAA,IAAH,2SAgBvBsB,EAA8BtB,EAAAA,GAAAA,IAAH,0S,qHC1HlB,SAASuB,EAAT,GAAgC,IACzBC,EADgBhC,EAAQ,EAARA,KAKpC,OACE,0BAEE,UAACiC,EAAD,YACE,SAAC,KAAD,CAAMV,GAAG,IAAIxB,UAAU,eAAvB,qBAEQ,KACR,kBAAMA,UAAU,cAAhB,gBAXciC,EAW8BhC,EAVzCgC,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,WAcpD,CAED,IAAMH,EAAoBzB,EAAAA,GAAAA,IAAH,gS,mNCjBjB6B,EAAuBC,EAAAA,cAAoB,CAAC,GA2BlD,SAASC,EAAT,GAMI,IANgL,IAC5KC,EAAIC,EAAIC,EADoK,IAAhKC,MAAAA,OAAgK,MAAxJ,EAAwJ,EAA5IC,EAA4I,EAArJC,QAA6BC,EAAwH,EAAnI/C,UAA4BgD,EAAuG,EAAvGA,mBAAoBC,EAAmF,EAAnFA,gBAAmF,IAAlEC,OAAAA,OAAkE,SAA3CC,EAA2C,EAAlDrC,MAAqBsC,GAA6B,YAE1KC,EAAsBd,EAAAA,WAAiBD,GACvCgB,GAAoB,UAAKF,GAG/B,MAA2BG,OAAOC,QAAQJ,GAA1C,eAAsE,CAAjE,sBAAOK,EAAP,KACoB,qBADpB,aAEUH,EAAkBG,EAEhC,CAED,IAAMC,GAAe,0BACdL,GACAC,GAFW,IAGdJ,OAAAA,IAGEpC,GAAQ,kBACPqC,GAzCX,YAAyK,IAAlIQ,EAAkI,EAAlIA,UAAWC,EAAuH,EAAvHA,eAAgBxD,EAAuG,EAAvGA,MAAOD,EAAgG,EAAhGA,OAAQ0D,EAAwF,EAAxFA,aAAcX,EAA0E,EAA1EA,OAAQY,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,SAAuD,IAA7CC,gBAAAA,OAA6C,SAC/JlD,EAAQ,CAAC,EAmBf,MAlBkB,QAAdgD,IACAhD,EAAM,yBAA2B,WACb,kBAAbiD,IACPjD,EAAM,wBAAN,UAAmCiD,EAAnC,MACCC,IACDlD,EAAM,4BAA8B,QACnB,kBAAVV,GAAuC,kBAAVA,IACpCU,EAAMV,MAAQA,GACI,kBAAXD,GAAyC,kBAAXA,IACrCW,EAAMX,OAASA,GACS,kBAAjB0D,GAAqD,kBAAjBA,IAC3C/C,EAAM+C,aAAeA,GACrBX,IACApC,EAAM+C,aAAe,OACA,qBAAdF,IACP7C,EAAM,gBAAkB6C,GACE,qBAAnBC,IACP9C,EAAM,qBAAuB8C,GAC1B9C,CACV,CAqBUmD,CAA4BP,IAE/B1D,EAAY,yBACZ+C,IACA/C,GAAa,IAAJ,OAAQ+C,IAIrB,IAHA,IAAMmB,EAAwC,QAA9BzB,EAAKiB,EAAaQ,cAA2B,IAAPzB,GAAgBA,EAChE0B,EAAW,GACXC,EAAYC,KAAKC,KAAK1B,GACnB2B,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAChC,IAAIC,EAAY1D,EAChB,GAAIsD,EAAYxB,GAAS2B,IAAMH,EAAY,EAAG,CAO1C,IAAMhE,EAAmC,QAA1BsC,EAAK8B,EAAUpE,aAA0B,IAAPsC,EAAgBA,EAAK,OAChE+B,EAAiB7B,EAAQ,EACzB8B,EAAmC,kBAAVtE,EACzBA,EAAQqE,EADU,eAEVrE,EAFU,cAECqE,EAFD,KAGxBD,GAAY,kBAAKA,GAAR,IAAmBpE,MAAOsE,GACtC,CACD,IAAMC,EAAgBpC,EAAAA,cAAoB,OAAQ,CAAEvC,UAAWA,EAAWc,MAAO0D,EAAWf,IAAKc,GAAK,UAClGL,EACAC,EAASS,KAAKD,GAKdR,EAASS,KAAKrC,EAAAA,cAAoBA,EAAAA,SAAgB,CAAEkB,IAAKc,GACrDI,EACApC,EAAAA,cAAoB,KAAM,OAErC,CACD,OAAQA,EAAAA,cAAoB,OAAQ,CAAEvC,UAAWgD,EAAoB,cAAeC,EAAiB,YAAa,SAAU,YAAqD,QAAvCN,EAAKe,EAAaM,uBAAoC,IAAPrB,GAAgBA,GAA+BE,EAClOsB,EAASvE,KAAI,SAACiF,EAAIN,GAAL,OAAWhC,EAAAA,cAAoBM,EAAS,CAAEY,IAAKc,GAAKM,EAApD,IACbV,EACT,C","sources":["modules/mediatheque/MediathequeService.tsx","view/Médiathèque/shared/SpecificEntityList.tsx","view/Médiathèque/shared/VerticalPlayer.tsx","view/Médiathèque/styles/EntityPlayerButton.tsx","view/shared/BreadCrumbs.tsx","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\nimport moment from 'moment';\n\nexport default class MediathequeService {\n    // A LA UNE (latest 10)\n    static async getLatestMediatheques() {\n        const tenantId = AuthCurrentTenant.get();\n        // const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}/mediatique/`);\n        return response.data;\n    }\n\n    static async getMediathequesBasedOnType(extension) {\n        const tenantId = AuthCurrentTenant.get();\n        // const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}/mediatique/${extension}`);\n        return response.data;\n    }\n\n    static async getOneMediatheque(id) {\n        const tenantId = AuthCurrentTenant.get();\n        // const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}/mediatique/${id}`);\n        return response.data;\n    }\n\n\n    // HELPER METHODS\n    static pipeDate(date) {\n        let d = date.split('T')[0];\n        return moment(d).format('LL');\n    };\n    static getDate(d) {\n        return (d?.split('T')[0]);\n    }\n    static getTime(d) {\n        return (d?.split('T')[1]);\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport MediathequeService from 'src/modules/mediatheque/MediathequeService';\n\n\n// COMPONENTS\nimport BreadCrumbs from 'src/view/shared/BreadCrumbs';\nimport Skeleton from 'react-loading-skeleton';\nimport VerticalPlayer from './VerticalPlayer';\n\nexport default function SpecificEntityList() {\n    const params = useParams();\n    let param = params.entity_type;\n\n    switch (param) {\n        case 'photos':\n            param = 'autres'\n            break;\n        case 'documentaires':\n            param = 'documentaire'\n            break;\n        case 'podcasts':\n            param = 'podcast'\n            break;\n\n        default:\n            break;\n    }\n    const routeExtension = `?filter[type]=${param}`;\n\n    const [entities, setEntities] = useState([]);\n    const [entityIsLoading, setEntityIsLoading] = useState(true);\n\n    const fetchTypeEntities = routeExtension => {\n        MediathequeService.getMediathequesBasedOnType(routeExtension)\n            .then((value) => {\n                value.rows?.map(entry => {\n                    setEntities(entities => entities.concat(entry));\n                });\n                setEntityIsLoading(false);\n            });\n    }\n\n    useEffect(() => { fetchTypeEntities(routeExtension) }, []);\n\n    return (\n        <section>\n            <div className='app__contenu'>\n                <section className='wideContent'>\n                    <h1>{param}</h1>\n                    <BreadCrumbs view={\"Médiathèques / \" + param} />\n                    {\n                        entityIsLoading\n                            ?\n                            <MainLoadingLayout>\n                                <Skeleton height={300} width={270} />\n                                <Skeleton height={300} width={270} />\n                                <Skeleton height={300} width={270} />\n                                <Skeleton height={300} width={270} />\n                            </MainLoadingLayout>\n                            :\n                            <MainLayout>\n                                {\n                                    entities?.map((ent, index) => {\n                                        return (\n                                            <VerticalPlayer dataSource={ent} key={index} />\n                                            // END OF MAP RETURN\n                                        )\n                                    })\n                                }\n                            </MainLayout>\n                    }\n                </section>\n            </div>\n        </section>\n    )\n}\n\n\nconst MainLoadingLayout = styled.section`\n    width: 100%;\n    margin: 2rem 0;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    .react-loading-skeleton{\n        width: 100%;\n        height: 200px;\n    }\n`;\n\nconst MainLayout = styled.section`\n    width: 100%;\n    margin: 2rem 0;\n\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));\n    grid-gap: 1rem;\n\n    @media (max-width: 767px){\n        padding: 0 .5rem;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components'\nimport EntityPlayerButton from '../styles/EntityPlayerButton';\nimport moment from 'moment';\n\n\n// ICONS\nimport { IoVideocamOutline } from \"react-icons/io5\";\n\nexport default function VerticalPlayer({ dataSource }) {\n    // HELPER FUNCTIONS\n    const pipeDate = date => {\n        let d = date.split('T')[0];\n        return moment(d).format('LL');\n    };\n\n    return (\n        <VerticalPlayerCard key={dataSource._id} className=\"videoCardVertical\">\n            {\n                (dataSource.photos?.length > 0)\n                    ?\n                    <div className=\"cardThumbnail\" style={{ backgroundImage: \"url(\" + dataSource.photos[0].downloadUrl + \")\" }} >\n                        <EntityPlayerButton data={dataSource} entity='mainGridPlayer' />\n                    </div>\n                    :\n                    <div className=\"cardThumbnail hasNoThumbnail\">\n                        <EntityPlayerButton data={dataSource} entity='mainGridPlayer' />\n                    </div>\n            }\n            <div className=\"dateAndType\">\n                <div className=\"contentType\">\n                    <IoVideocamOutline className='icon' />\n                    {dataSource.type}\n                </div>\n                <span className='contentDate'>\n                    {pipeDate(dataSource.updatedAt)}\n                </span>\n            </div>\n            <div className=\"verticalPlayerTitle\">\n                <span>{dataSource.titleFR}</span>\n            </div>\n        </VerticalPlayerCard>\n    )\n}\n\nconst VerticalPlayerCard = styled.div`\n    position: relative;\n    height: 330px !important;\n    overflow: hidden;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    .cardThumbnail{\n        width: 100%;\n        height: 200px;\n        background-size: cover;\n        background-position: center;\n        position: relative;\n    }\n    .hasNoThumbnail{\n        background-image: url('https://imgur.com/N1ZiTM4.jpeg');\n    }\n\n    .dateAndType{\n        height: 30px;\n        color: #fff;\n\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        span{\n            color: #fff;\n        }\n\n        .contentType{\n            width: 100px;\n            border: 1px solid red;\n            border-radius: .5rem;\n            height: 30px;\n\n            font-family: 'Proxima Nova';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 1rem;\n            line-height: 15px;\n            color: red;\n            padding: .3rem .5rem;\n            \n            display: flex;\n            align-items: center;\n            justify-content: space-evenly;\n\n            .icon{\n                margin-right: 5px;\n            }\n        }\n\n        .contentDate{\n            color: rgba(122, 122, 122, 1);\n            font-size: 12px;\n            font-family: 'Proxima Nova';\n        }\n    }\n\n    .verticalPlayerTitle{\n        height: 50px;\n\n        span{\n            width: 100%;\n            font-family: 'Proxima Nova';\n            text-transform: capitalize !important;\n            line-height: 1.5;\n            font-weight: 700;\n            font-size: 1rem;\n            color: var(--violet);\n        }\n    }\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom';\n\n// ICONS\nimport { BsFillPlayFill } from \"react-icons/bs\";\nimport { AiOutlineEye } from \"react-icons/ai\";\n\nexport default function EntityPlayerButton({ data, entity }) {\n    return (\n        <div>\n            {\n                entity === 'main' &&\n                <Link to={'/Mediatheque/entity/' + data._id}>\n                    <DetailsButtonMainSPlide >\n                        {\n                            {\n                                videos: (\n                                    <BsFillPlayFill />\n                                ),\n                                autres: (\n                                    <AiOutlineEye />\n                                ),\n                                documentaire: (\n                                    <AiOutlineEye />\n                                ),\n                                photos: (\n                                    <AiOutlineEye />\n                                ),\n                                podcast: (\n                                    <AiOutlineEye />\n                                )\n                            }[data.type]\n                        }\n                    </DetailsButtonMainSPlide>\n                </Link>\n            }\n            {\n                entity === '' &&\n                <Link to={'/Mediatheque/entity/' + data._id}>\n                    <DetailsButton >\n                        {\n                            {\n                                videos: (\n                                    <BsFillPlayFill />\n                                ),\n                                autres: (\n                                    <AiOutlineEye />\n                                ),\n                                documentaire: (\n                                    <AiOutlineEye />\n                                ),\n                                photos: (\n                                    <AiOutlineEye />\n                                ),\n                                podcast: (\n                                    <AiOutlineEye />\n                                )\n                            }[data.type]\n                        }\n                    </DetailsButton>\n                </Link>\n            }\n            {\n                entity === 'mainGridPlayer' &&\n                <Link to={'/Mediatheque/entity/' + data._id}>\n                    <DetailsButtonMainGridPlayer >\n                        {\n                            {\n                                videos: (\n                                    <BsFillPlayFill />\n                                ),\n                                autres: (\n                                    <AiOutlineEye />\n                                ),\n                                documentaire: (\n                                    <AiOutlineEye />\n                                ),\n                                photos: (\n                                    <AiOutlineEye />\n                                ),\n                                podcast: (\n                                    <AiOutlineEye />\n                                )\n                            }[data.type]\n                        }\n                    </DetailsButtonMainGridPlayer>\n                </Link>\n            }\n        </div>\n    )\n}\n\n\nconst DetailsButton = styled.div`\n    height: 50px;\n    width: 50px;\n    font-size: 1.4rem;\n    border-radius: 50%;\n    color: red;\n    background-color: #fff;\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 140px;\n    left: 10px;\n`;\nconst DetailsButtonMainSPlide = styled.div`\n    height: 50px;\n    width: 50px;\n    font-size: 1.4rem;\n    border-radius: 50%;\n    color: red;\n    background-color: #fff;\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 290px;\n    left: 10px;\n`;\nconst DetailsButtonMainGridPlayer = styled.div`\n    height: 50px;\n    width: 50px;\n    font-size: 1.4rem;\n    border-radius: 50%;\n    color: red;\n    background-color: #fff;\n    \n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 140px;\n    left: 10px;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport default function BreadCrumbs({ view }) {\n  const capitalize = (text) => {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n  };\n\n  return (\n    <div>\n      {/* BREADCRUMBS */}\n      <BreadCrumbsHeader>\n        <Link to='/' className='homeLinkInBC'>\n          Accueil\n        </Link>{\" \"}\n        <span className='currentView'>/ {capitalize(view)}</span>\n      </BreadCrumbsHeader>\n    </div>\n  );\n}\n\nconst BreadCrumbsHeader = styled.div`\n  margin: 0.7rem 0;\n  font-size: \"1rem\";\n  font-family: \"Proxima Nova\";\n\n  .currentView {\n    color: var(--gray3);\n  }\n\n  .homeLinkInBC {\n    text-decoration: none;\n    color: var(--gray2);\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["MediathequeService","tenantId","AuthCurrentTenant","authAxios","response","data","extension","id","date","d","split","moment","format","SpecificEntityList","param","useParams","entity_type","routeExtension","useState","entities","setEntities","entityIsLoading","setEntityIsLoading","useEffect","then","value","rows","map","entry","concat","fetchTypeEntities","className","view","MainLoadingLayout","height","width","MainLayout","ent","index","dataSource","styled","VerticalPlayer","VerticalPlayerCard","photos","length","style","backgroundImage","downloadUrl","entity","type","pipeDate","updatedAt","titleFR","_id","EntityPlayerButton","to","DetailsButtonMainSPlide","videos","autres","documentaire","podcast","DetailsButton","DetailsButtonMainGridPlayer","BreadCrumbs","text","BreadCrumbsHeader","charAt","toUpperCase","slice","SkeletonThemeContext","React","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}