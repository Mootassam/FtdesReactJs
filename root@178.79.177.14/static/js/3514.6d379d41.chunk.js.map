{"version":3,"file":"static/js/3514.6d379d41.chunk.js","mappings":"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","sources":["modules/Search/SearchService.tsx","view/Search/SearchContext.tsx","view/Search/SearchHeader.tsx","view/Search/SearchFilter.tsx","view/Search/SRPCard.tsx","view/Search/SRP/SRPTable.tsx","view/Search/SRP/SRPFooter.tsx","view/Search/SRP/SearchResults.tsx","view/Search/Search.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\n\nexport default class SearchService {\n    // GET CATEGORIES LIST FOR PUBLICATIONS\n    static async getCategoriesList() {\n        const tenantId = AuthCurrentTenant.get();\n        const response = await authAxios.get(`/tenant/${tenantId}/category-publication`);\n        return response.data;\n    }\n\n    static async getSearchResultsForPublicationsBasedOnSearchString(SEARCH_STRING, FILTER_STRING, OFFSET) {\n\n        let extension = \"\";\n        // HANDLING EMPRT SEARCH\n        if (SEARCH_STRING.length >= 1)\n            extension = `?filter[descriptionFR]=${SEARCH_STRING}`;\n\n        // HANDLING FILTER\n        if (FILTER_STRING !== \"autre\") {\n            if (SEARCH_STRING.length >= 1) {\n                // THERE IS SEARCH STRING, use &\n                extension = `?filter[descriptionFR]=${SEARCH_STRING}&filter[categorie]=${FILTER_STRING}`;\n            } else {\n                // NO SEARCH STRING, use ?\n                extension = `?filter[categorie]=${FILTER_STRING}`;\n            }\n        }\n\n        const tenantId = AuthCurrentTenant.get();\n        const response = await authAxios.get(`/tenant/${tenantId}/publication${extension}&limit=5&offset=${OFFSET}`);\n        return response.data;\n    }\n\n    // SAERCH BASED ON CATEGORIES (REVERSE LOGIC)\n    static async searchUsingMainCatefories(SEARCH_STRING, categoryName, OFFSET) {\n        const tenantId = AuthCurrentTenant.get();\n        const response = await authAxios.get(`/tenant/${tenantId}/category-publication?filter[titleFR]=${categoryName}`);\n        const publicationsOfSelectedCategory = response.data.rows[0]?.publications;\n        const finalResponseOBject = {\n            rows: publicationsOfSelectedCategory ?? [],\n            count: publicationsOfSelectedCategory?.length ?? 0\n        }\n        return finalResponseOBject;\n    }\n\n    // ARCHIVE SEARCH\n    static async getSearchResultsForArchiveBasedOnSearchString(SEARCH_STRING, FILTER_STRING, OFFSET) {\n        const tenantId = AuthCurrentTenant.get();\n        const response = await authAxios.get(`/tenant/${tenantId}/publication?filter[descriptionFR]=${SEARCH_STRING}&limit=5&offset=${OFFSET}&filter[statut]=archive${FILTER_STRING}`);\n        return response.data;\n    }\n}\n","import { createContext } from 'react'\n\nexport const SearchContext = createContext<any>(null);\n","import React, { useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport SearchService from 'src/modules/Search/SearchService';\nimport { SearchContext } from './SearchContext';\n// ICONS\nimport { IoSearchOutline } from 'react-icons/io5'\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai'\nimport { VscChromeClose } from 'react-icons/vsc'\n\nexport default function SearchHeader({ location }) {\n\n    // GLOBAL STATE\n    const { isLoading, setIsLoading, setSRP, searchString, setSearchString, publicationFilter, setcurrentPageIndex } = useContext(SearchContext);\n\n    // SEARCH_STRING HANDLER\n    const handleChange = event => {\n        setSearchString(event.target.value);\n    }\n\n    // HANDLING FORM SUBMIT\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSRP([]);\n        searchPublications(searchString);\n    }\n\n    // FETCH DATA\n    // PUBLICATIONS\n    const searchPublications = (SEARCH_STRING: string) => {\n        setIsLoading(true);\n        SearchService.getSearchResultsForPublicationsBasedOnSearchString(SEARCH_STRING, publicationFilter, 0)\n            .then(res => {\n                setcurrentPageIndex(0);\n                setSRP(SRP => SRP.concat(res));\n                setIsLoading(false);\n            })\n    }\n\n    // ARCHVIE\n    const searchArchive = (SEARCH_STRING: string, FILTER_STRING: string) => {\n        setIsLoading(true);\n        SearchService.getSearchResultsForArchiveBasedOnSearchString(SEARCH_STRING, FILTER_STRING, 0)\n            .then(res => {\n                setSRP(SRP => SRP.concat(res));\n                setIsLoading(false);\n            })\n    }\n\n    // RESET SEARCH INPUT TO EMPTY\n    const cancelSearch = _ => {\n        setSearchString('');\n    }\n\n    // \n    // AUTO SEARCH IF COMMING FRO HOME SEARCH_BAR\n    useEffect(() => {\n        // COMMING FROM THE HOME SEARCH BAR\n        if (location.HOME_SEARCH_STRING) {\n            if (location.HOME_SEARCH_STRING.length >= 1) {\n                setSearchString(location.HOME_SEARCH_STRING);\n                setSRP([]);\n                searchPublications(location.HOME_SEARCH_STRING);\n            }\n        }\n\n        // COMMING FROM THE ARCHIVE SECTION\n        if (location.ARCHIVE_SEARCH_STRING) {\n            if (location.ARCHIVE_SEARCH_STRING.length >= 1) {\n                setSearchString(location.ARCHIVE_SEARCH_STRING);\n                setSRP([]);\n                searchArchive(location.ARCHIVE_SEARCH_STRING, location.ARCHIVE_FILTER);\n            }\n        }\n    }, []);\n\n    return (\n        <HeaderLayout>\n            <form onSubmit={handleSubmit}>\n                <SearchBox>\n                    <input type=\"text\" value={searchString} onChange={handleChange} />\n                    {\n                        (searchString.length >= 1) &&\n                        <button type='reset' id='resetButton' onClick={cancelSearch}>\n                            <VscChromeClose />\n                        </button>\n                    }\n                    {/* \n                        Show submit button \n                        once search action triggers, show loading button till result has been returned\n                    */}\n                    {\n                        (!isLoading && searchString.length >= 1)\n                            ?\n                            <button type=\"submit\" className='searchButton'>\n                                <IoSearchOutline />\n                                <span>Chercher</span>\n                            </button>\n                            :\n                            <div id='loadingButton' className='searchButton'>\n                                {(!isLoading) && <IoSearchOutline />}\n                                {(isLoading) && <AiOutlineLoading3Quarters className='loadingIcon' />}\n\n                                {(!isLoading) && <span>Chercher</span>}\n                                {(isLoading) && <span>loading</span>}\n                            </div>\n                    }\n                </SearchBox>\n            </form>\n        </HeaderLayout>\n    )\n}\n\nconst HeaderLayout = styled.div`\n    margin-top: 1rem;\n`;\n\nconst SearchBox = styled.div`\n    width: 100%;\n    height: 60px;\n    padding: 0 .3rem;\n    background-color: #F1F1F1;\n    /* background-color: #F1F1F1; */\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n    \n    input{\n        background-color: #F1F1F1;\n        font-size: 1rem;\n        font-weight: bold;\n        height: 50px;\n        width: 100%;\n        margin-right: .5rem;\n        color: #000;\n        padding-left: 1rem;\n    }\n\n    .searchButton{\n        height: 50px;\n        padding: 0 1rem;\n        color: #fff;\n        text-transform: uppercase;\n        font-size: 1.5rem;\n        background-color: red;\n\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n\n        span{\n            color: #fff;\n            margin-left: .5rem;\n        }\n    }\n\n    #loadingButton{\n        background-color: #E0E0E0;\n        color: #000;\n\n        .loadingIcon{\n            animation: spin .7s linear infinite;\n        }\n    }\n\n    #resetButton{\n        height: 1.8rem;\n        width: 1.8rem;\n\n        position: absolute;\n        right: 11rem;\n        \n        font-size: 1rem;\n        color: var(--gray3);\n        background-color: #E0E0E0;\n\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 50%;\n    }\n\n    @keyframes spin {\n        from {transform:rotate(0deg);}\n        to {transform:rotate(360deg);}\n    }\n`;","import React, { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { SearchContext } from './SearchContext';\nimport Skeleton from 'react-loading-skeleton';\nimport \"react-loading-skeleton/dist/skeleton.css\";\n// SERVICES\nimport SearchService from 'src/modules/Search/SearchService';\n\nexport default function SearchFilter() {\n\n    // GLOBAL STATE\n    const {\n        SRP, setSRP,\n        setIsLoading, searchString,\n        publicationFilter, setpublicationFilter,\n        setcurrentPageIndex\n    } = useContext(SearchContext);\n\n    const handleFilterValueChange = event => {\n        const filer_string = event.target.value;\n        if (filer_string === 'autre')\n            setpublicationFilter('');\n        else\n            setpublicationFilter(filer_string);\n\n        setIsLoading(true);\n        setSRP([]);\n        SearchService.searchUsingMainCatefories(searchString, filer_string, 0)\n            .then(res => {\n                setcurrentPageIndex(0);\n                setSRP(SRP => SRP.concat(res));\n                setIsLoading(false);\n            })\n    }\n\n    // DYNAMIC CATEGORY LIST\n    const [categoriesList, setCategoriesList] = useState<any[]>([]);\n    const [categoriesListIsLoading, setCategoriesListIsLoading] = useState(true);\n    const getCategoriesList = () => {\n        SearchService.getCategoriesList()\n            .then(res => {\n                setCategoriesListIsLoading(true);\n                setCategoriesList(categoriesList => categoriesList.concat(res));\n                setCategoriesListIsLoading(false);\n            })\n            .catch(err => { console.error(err) });\n    };\n\n    useEffect(() => {\n        getCategoriesList();\n    }, [])\n\n    return (\n        <FilterLayout>\n            {\n                (categoriesListIsLoading === false) &&\n                <div id=\"filterCategories\" onChange={handleFilterValueChange}>\n                    <label htmlFor=\"all\">\n                        <input type=\"radio\" name=\"filterCat\" value=\"autre\" id=\"all\" defaultChecked />\n                        <span>tous</span>\n                    </label>\n                    {\n                        (categoriesList.length >= 1) &&\n                        <>\n                            {\n                                categoriesList[0]['rows'].map((category: any) => {\n                                    return (\n                                        <label htmlFor={category._id} key={category._id}>\n                                            <input type=\"radio\" name=\"filterCat\" value={category.titleFR} id={category._id} />\n                                            <span>{category.titleFR}</span>\n                                        </label>\n                                    )\n                                })\n                            }\n                        </>\n                    }\n                </div>\n            }\n\n            {/* SHOW THIS WHEN LOADING */}\n            {\n                (categoriesListIsLoading === true) &&\n                <div className='LoadingFlex'>\n                    {[...Array(5)].map((x, i) =>\n                        <Skeleton key={i} height={60} width={150} />\n                    )}\n                </div>\n            }\n        </FilterLayout>\n    )\n}\n\n\nconst FilterLayout = styled.div`\n    display: block;\n    margin-top: 1rem;\n\n    #filterCategories{\n        width: 100%;\n        height: 60px;\n        padding: 0 4rem;\n        display: flex;\n        align-items:center;\n        justify-content: space-around;\n\n        input{\n            display: none;\n            &:checked+span {\n                opacity: 1;\n                background-color: var(--violet);\n                color: #fff;\n                border-color: var(--violet);\n            }\n        }\n\n        label{\n            display: inline-block;\n            margin-right: 1rem;\n            span{\n                font-family: 'Bebas Neue';\n                font-style: normal;\n                font-weight: 400;\n                font-size: 18px;\n                line-height: 22px;\n                text-align: center;\n                text-transform: uppercase;\n                color: #2B2840;\n                opacity: .5;\n\n                cursor: pointer;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                min-width: 100px;\n                height: 48px;\n                padding: 0 1rem;\n                border: 2px solid #F1F1F1;\n                \n                &:hover{\n                    opacity: 1;\n                    background-color: var(--violet);\n                    color: #fff;\n                    border-color: var(--violet);\n                }\n            }\n        }\n    }\n\n    .LoadingFlex{\n        width: 100%;\n        height: 70px;\n        \n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-evenly;\n    }\n`;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components'\nimport parse from 'html-react-parser';\nimport moment from 'moment';\n\nexport default function SRPCard({ _id, date, content, thumbnail }) {\n    const formattedDate = moment(date).format('l');\n    return (\n        <CardLayout>\n            <div className='cardDate'>{formattedDate}</div>\n            <div className='cardContent'>\n                <strong>TITLE HERE</strong>\n                {/* <Link to={'/publication/' + _id.toString()}><strong>TITLE HERE</strong></Link> */}\n                {parse(content)}\n            </div>\n            <div className='cardImage' style={{ backgroundImage: \"url(\" + thumbnail + \")\" }}></div>\n        </CardLayout>\n    )\n}\n\nconst CardLayout = styled.div`\n    width: 100%;\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n\n    font-family: 'Bebas Neue Pro';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n\n    border-top: 1px solid #E0E0E0;\n    padding-top: 1rem;\n\n    .cardDate{\n        width: 100px;\n        color: #A3A3A9;\n    }\n\n    .cardContent{\n        width: 470px;\n        height: 100px;\n        overflow-y: hidden;\n\n        strong{\n            color: #2B2840;\n            font-family: 'Bebas Neue Pro';\n            font-style: normal;\n            font-size: 20px;\n\n            &:hover{\n                text-decoration: underline;\n            }\n        }\n\n        p{\n            margin-top: .3rem;\n            font-family: 'Proxima Nova';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 14px;\n            line-height: 25px;\n            color: #4F4F4F;\n            text-align: justify;\n        }\n    }\n\n    .cardImage{\n        width: 270px;\n        height: 175px;\n        background-size: cover;\n        background-position: center;\n    }\n\n`;","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport Skeleton from 'react-loading-skeleton';\nimport { SearchContext } from '../SearchContext';\n// COMPONENTS\nimport SRPCard from '../SRPCard';\n// ICONS\nimport { BsBox } from 'react-icons/bs'\n\n\n\nexport default function SRPTable({ currentPostsToShow }) {\n    // GLOBAL STATE\n    const { isLoading } = useContext(SearchContext);\n\n    // HELPER FUNCTION\n    const getValidThumbnail = attachmentsArray => {\n        const acceptableExtions = 'png, jpg, jpeg, gif';\n        let fakeUrl = \"https://via.placeholder.com/270x175\";\n        attachmentsArray.forEach(att => {\n            if (att.downloadUrl)\n                if (att.downloadUrl.length >= 1) {\n                    const urlExtension = att.downloadUrl.substring((att.downloadUrl.lastIndexOf('.') + 1), att.downloadUrl.length);\n                    if (acceptableExtions.includes(urlExtension)) {\n                        fakeUrl = att.downloadUrl;\n                    }\n                }\n        })\n        return fakeUrl;\n    }\n\n\n    return (\n        <div>\n            <SRPDataLayout>\n                {\n                    // ONCE LOADING IS DONE\n                    (isLoading === true)\n                        ?\n                        <section>\n                            <Skeleton height={170} />\n                        </section>\n                        :\n                        <section>\n                            {\n                                (currentPostsToShow.length >= 1)\n                                    ?\n                                    <section>\n                                        {\n                                            currentPostsToShow.map((searchResult, index) => {\n                                                let thumbnail: any;\n                                                if (searchResult.supports.length >= 1) {\n                                                    thumbnail = getValidThumbnail(searchResult.supports);\n                                                }\n                                                return (\n                                                    <SRPCard\n                                                        key={index}\n                                                        _id={searchResult['_id'] ?? 0}\n                                                        date={searchResult['createdAt']}\n                                                        content={searchResult['descriptionFR'] ?? 'N.A'}\n                                                        thumbnail={thumbnail}\n                                                    />\n                                                )\n                                            })\n                                        }\n                                    </section>\n                                    :\n                                    <h3 id='noDataFound'><BsBox />&nbsp;No data found !</h3>\n                            }\n                        </section>\n                }\n            </SRPDataLayout>\n        </div>\n    )\n}\n\nconst SRPDataLayout = styled.div`\n    width: 100%;\n    margin: 1rem 0;\n\n    #noDataFound{\n        font-family: 'Proxima Nova';\n        font-style: normal;\n        font-weight: 100;\n        font-size: 1.5rem;\n        text-align: center;\n        color: #c7c6c6;\n\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n    }\n`;","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport SearchService from 'src/modules/Search/SearchService';\nimport { SearchContext } from '../SearchContext';\n\n// ICONS\nimport { MdNavigateBefore, MdOutlineNavigateNext } from 'react-icons/md'\n\nexport default function SRPFooter({ totalPosts }) {\n\n\n    // GLOBAL STATE\n    const {\n        setIsLoading,\n        setSRP,\n        searchString,\n        numberOfPostsPerPage,\n        currentPageIndex,\n        setcurrentPageIndex\n    } = useContext(SearchContext);\n\n    let pages: any[] = [];\n    for (let index = 0; index < Math.ceil(totalPosts / numberOfPostsPerPage); index++) {\n        pages.push(index);\n    }\n\n    const changePagesUsingArrows = (pageNumber: number, action: string) => {\n        setIsLoading(true);\n        setSRP([]);\n        if (action === 'prev') {\n            setcurrentPageIndex(pageNumber - 1);\n            fetchData(pageNumber - 1);\n        }\n        if (action === 'next') {\n            setcurrentPageIndex(pageNumber + 1);\n            fetchData(pageNumber + 1);\n        }\n    }\n\n    const loadCOntentOfCurrentPage = (index: number) => {\n        setIsLoading(true);\n        setcurrentPageIndex(index);\n        setSRP([]);\n        fetchData(index);\n    }\n\n    const fetchData = index => {\n        SearchService.getSearchResultsForPublicationsBasedOnSearchString(searchString, 'autre', (index * 5))\n            .then(res => {\n                setSRP(SRP => SRP.concat(res));\n                setIsLoading(false);\n            })\n            .catch(err => { console.error(err) });\n    }\n\n    return (\n        <FooterLayout>\n            {/* \n                PREVIOUS BUTTON\n                Enable if not in first page (0)\n                page number must be >=1\n             */}\n            {\n                (currentPageIndex >= 1)\n                    ?\n                    <button\n                        className='pageSkipper prevSkipper'\n                        onClick={() => changePagesUsingArrows(currentPageIndex, 'prev')}\n                    >\n                        <MdNavigateBefore className='icon prev' />\n                        Précédent\n                    </button>\n                    :\n                    <button className='pageSkipper diabled' disabled>\n                        <MdNavigateBefore className='icon prev' />\n                        Précédent\n                    </button>\n            }\n\n            {/* DYNAMIC BUTTONS BASED ON ITEMS COUNT */}\n            <div id=\"pagination\">\n                {\n                    pages.map((index) => {\n                        return (\n                            <button\n                                key={index}\n                                className={(index === currentPageIndex) ? 'activeIndex' : ''}\n                                onClick={() => loadCOntentOfCurrentPage(index)}\n                            >\n                                {index + 1}\n                            </button>\n                        )\n                    })\n                }\n            </div>\n            {/* NEXT BUTTON */}\n            {\n                (currentPageIndex < (totalPosts / numberOfPostsPerPage) - 1)\n                    ?\n                    <button\n                        className='pageSkipper nextSkipper'\n                        onClick={() => changePagesUsingArrows(currentPageIndex, 'next')}\n                    >\n                        Suivant\n                        <MdOutlineNavigateNext className='icon next' />\n                    </button>\n                    :\n                    <button className='pageSkipper diabled' disabled>\n                        Suivant\n                        <MdOutlineNavigateNext className='icon next' />\n                    </button>\n            }\n        </FooterLayout >\n    )\n}\n\n\nconst FooterLayout = styled.div`\n    width: 100%;\n    margin-top: 3rem;\n    margin-bottom: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    button{\n        height: 35px;\n        width: 100px;\n        font-family: 'Proxima Nova';\n        font-size: 12px;\n        color: var(--violet);\n        border: 1px solid #A3A3A9;\n        background-color: transparent;\n\n        &:hover{\n            background-color: var(--violet);\n            border: 1px solid var(--violet);\n            color: #fff;\n        }\n        &:hover .icon{\n            background-color: transparent;\n        }\n    }\n\n    .pageSkipper{\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n        color: var(--violet);\n        .next{\n            /* margin-left: .2rem; */\n            font-size: 1.3rem;\n        }\n\n        .prev{\n            /* margin-right: .2rem; */\n            font-size: 1.3rem;\n            \n        }\n    }\n    .diabled{ \n        color: #A3A3A9;\n        &:hover{\n            background-color: transparent;\n            color: #A3A3A9;\n            border: 1px solid #A3A3A9;\n            cursor: default;\n        }\n    }\n\n    #pagination{\n        margin: 0 .5rem;\n        width: calc(fit-content + 100px);\n        display: flex;\n        justify-content: space-between;\n\n        button{\n            display: inline-block;\n            width: 40px;\n            min-width: fit-content;\n            height: 35px;\n            margin: 0 .2rem;\n\n        }\n\n        .activeIndex{\n            background-color: var(--violet);\n            color: #fff;\n        }\n    }\n`;","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport SearchService from 'src/modules/Search/SearchService';\nimport { SearchContext } from '../SearchContext';\n\n// COMPONENTS\nimport SRPTable from './SRPTable';\nimport SRPFooter from './SRPFooter';\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\n\nexport default function SearchResults() {\n\n    // GLOBAL STATE\n    const {\n        setIsLoading,\n        SRP, setSRP,\n        searchString\n    } = useContext(SearchContext);\n\n    // HANDLING SUB FILTER (date / name)\n    const handleSubFilter = event => {\n        setIsLoading(true);\n        setSRP([]);\n        const FILTER_STRING = `&orderBy=[${event.target.value}]`;\n        // redo the search using chosen option\n        SearchService.getSearchResultsForPublicationsBasedOnSearchString(searchString, FILTER_STRING, 0)\n            .then(res => {\n                setSRP(SRP => SRP.concat(res));\n                setIsLoading(false);\n            })\n            .catch(err => { console.error(err) });\n    }\n\n    let currentPostsToShow: any[] = [];\n    if (SRP.length >= 1)\n        if (SRP[0].rows.length >= 1)\n            currentPostsToShow = SRP[0].rows;\n\n    return (\n        <SRPLayout>\n            {/* SUB FILTER AND SRP METADA */}\n            <SRPHeader>\n                {\n                    (SRP.length >= 1) &&\n                    <>\n                        <div>\n                            <strong>{SRP[0].count}</strong>\n                            <span>résultat pour cette recherche</span>\n                        </div>\n                        <div id='filterContainer'>\n                            <span>Trier par</span>\n                            <select name=\"filterBy\" id=\"filterBySelect\" onChange={handleSubFilter}>\n                                <option value=\"\">--</option>\n                                <option value=\"createdAt_DESC\">Date ( Desc )</option>\n                                <option value=\"createdAt_ASC\">Date ( Asc )</option>\n                                <option value=\"az\">Name A-Z</option>\n                                <option value=\"za\">Name Z-A</option>\n                            </select>\n                        </div>\n                    </>\n                }\n            </SRPHeader>\n\n            {/* RESULT CONTENT DISPLAYED IN ARRAY FORMAT */}\n            <SRPTable currentPostsToShow={currentPostsToShow} />\n\n            {/* FOOTER WITH PAGINATION ENABLED */}\n            <SRPFooter totalPosts={(SRP.length >= 1) ? SRP[0].count : 0} />\n        </SRPLayout >\n    )\n}\n\n\nconst SRPLayout = styled.div`\n    margin-top: 1rem;\n`;\n\nconst SRPHeader = styled.div`\n    width: 100%;\n    padding: 1rem 0;\n    font-size: 14px;\n    \n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    \n    div{\n        strong{\n            margin-right: .4rem;\n        }\n        span, strong{\n            font-family: 'Proxima Nova';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 14px;\n            margin-right: .5rem;\n        }\n    }\n\n    #filterContainer{\n        span{\n            font-family: 'Proxima Nova';\n            font-style: normal;\n            font-weight: 400;\n            font-size: 14px;\n            margin-right: .5rem;\n        }\n\n        select{\n            padding: .5rem;\n            font-family: 'Proxima Nova';\n            font-style: normal;\n            font-weight: 700;\n            font-size: 14px;\n            line-height: 17px;\n            color: #2B2840;\n        }\n    }\n`;","import React, { useState } from 'react'\nimport { SearchContext } from './SearchContext'\nimport styled from 'styled-components'\n// COMPONENTS\nimport SearchHeader from './SearchHeader'\nimport SearchFilter from './SearchFilter'\nimport SearchResults from './SRP/SearchResults'\n// OTHER\n\nexport default function Search({ location }) {\n\n    // GLOBAL STATE\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchString, setSearchString] = useState('');\n    const [SRP, setSRP] = useState([]);\n    const [publicationFilter, setpublicationFilter] = useState('autre');\n    // PAGINATION LOGIC\n    const [currentPageIndex, setcurrentPageIndex] = useState(0);\n    const [numberOfPostsPerPage, setnumberOfPostsPerPage] = useState(5);\n\n    return (\n        <SearchContext.Provider value={\n            {\n                isLoading, setIsLoading,\n                SRP, setSRP,\n                searchString, setSearchString,\n                publicationFilter, setpublicationFilter,\n                currentPageIndex, setcurrentPageIndex,\n                numberOfPostsPerPage, setnumberOfPostsPerPage\n            }\n        }>\n            <SearchLayout>\n                <section className='wideContent'>\n                    <SearchHeader location={location} />\n                    <SearchFilter />\n                    <SearchResults />\n                </section>\n            </SearchLayout>\n        </SearchContext.Provider>\n    )\n}\n\nconst SearchLayout = styled.section`\n    height: 100%;\n    .wideContent{\n        padding: 0 7rem;\n    }\n\n`;"],"names":["SearchService","tenantId","AuthCurrentTenant","authAxios","response","data","SEARCH_STRING","FILTER_STRING","OFFSET","extension","length","categoryName","publicationsOfSelectedCategory","rows","publications","finalResponseOBject","count","SearchContext","createContext","SearchHeader","location","useContext","isLoading","setIsLoading","setSRP","searchString","setSearchString","publicationFilter","setcurrentPageIndex","searchPublications","then","res","SRP","concat","useEffect","HOME_SEARCH_STRING","ARCHIVE_SEARCH_STRING","ARCHIVE_FILTER","HeaderLayout","onSubmit","event","preventDefault","SearchBox","type","value","onChange","target","id","onClick","_","className","styled","SearchFilter","setpublicationFilter","useState","categoriesList","setCategoriesList","categoriesListIsLoading","setCategoriesListIsLoading","catch","err","console","error","FilterLayout","filer_string","htmlFor","name","defaultChecked","map","category","_id","titleFR","Array","x","i","height","width","SRPCard","date","content","thumbnail","formattedDate","moment","format","CardLayout","parse","style","backgroundImage","SRPTable","currentPostsToShow","SRPDataLayout","searchResult","index","supports","attachmentsArray","fakeUrl","forEach","att","downloadUrl","urlExtension","substring","lastIndexOf","includes","getValidThumbnail","SRPFooter","totalPosts","numberOfPostsPerPage","currentPageIndex","pages","Math","ceil","push","changePagesUsingArrows","pageNumber","action","fetchData","FooterLayout","disabled","loadCOntentOfCurrentPage","SearchResults","SRPLayout","SRPHeader","Search","setnumberOfPostsPerPage","Provider","SearchLayout"],"sourceRoot":""}