{"version":3,"file":"static/js/874.fc98f46d.chunk.js","mappings":"qQAyBA,EAzBgC,CAC9BA,KAAM,CACJ,QACA,cAEFC,KAAM,CACJ,WACA,YAEFC,YAAa,CACX,QACA,SACA,QACA,YACA,WACA,SACA,QAEFC,WAAY,CACV,QACA,SACA,Y,4ECREC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,YAAaK,EAAAA,EAAAA,YACXC,EAAAA,EAAAA,IAAK,4CACL,CACEC,QAASC,EAAAA,cAGbC,YAAaJ,EAAAA,EAAAA,QAAsBC,EAAAA,EAAAA,IAAK,2BAA4B,CAClEI,QAAS,SACTC,IAAK,EACLC,UAAU,IAEZC,cAAeR,EAAAA,EAAAA,QACbC,EAAAA,EAAAA,IAAK,4CACL,CACEM,UAAU,IAGdE,SAAUT,EAAAA,EAAAA,OACRC,EAAAA,EAAAA,IAAK,yCACL,CAAC,KA4GL,MAzGA,SAA0BS,GACxB,OAAkCC,EAAAA,EAAAA,UAAS,YAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,GAAwBF,EAAAA,EAAAA,WAAS,WAC/B,IAAMG,EAASJ,EAAMI,QAAU,CAAC,EAEhC,OADAD,EAAaC,EAAOC,UACb,CACLC,MAAOF,EAAOE,MACdD,SAAUD,EAAOC,SACjBX,YAAaU,EAAOV,YACpBI,cAAeM,EAAON,cACtBC,SAAUK,EAAOL,UAAY,GAEhC,IAVMQ,GAAP,eAYMC,GAAOC,EAAAA,EAAAA,IAAQ,CACnBC,UAAUC,EAAAA,EAAAA,GAAYxB,GACtByB,KAAM,MACNC,cAAeN,IAQXO,EAAW,SAACC,GAAY,IAAD,EAC3BA,EAAOV,SAAWH,EAClBF,EAAMc,SAAN,OAAed,QAAf,IAAeA,GAAf,UAAeA,EAAOI,cAAtB,aAAe,EAAeY,GAAID,EACnC,EACOE,EAAgBjB,EAAhBiB,YAER,OACE,SAAC,MAAD,kBAAkBT,GAAlB,cACE,iBAAMM,SAAUN,EAAKU,aAAaJ,GAAlC,UACE,iBAAKK,UAAU,kBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAOC,QAAQ,aAAf,uBACA,iBAAKD,UAAU,qBAAf,WACE,gBACEA,UAAyB,aAAdjB,EAA2B,iBAAmB,GACzDmB,QA/CK,WAEjBlB,EAAa,WACd,EA0CW,uBAKA,gBACEgB,UAAyB,iBAAdjB,EAA+B,iBAAmB,GAC7DmB,QAhDK,WAEjBlB,EAAa,eACd,EA2CW,iCAOJ,SAACmB,EAAA,EAAD,CACEC,KAAK,QACLC,OAAOjC,EAAAA,EAAAA,IAAK,qBACZkC,aAAa,WAEf,SAACH,EAAA,EAAD,CACEC,KAAK,cACLC,OAAOjC,EAAAA,EAAAA,IAAK,2BACZkC,aAAa,iBAEf,SAACC,EAAA,EAAD,CACEH,KAAK,WACLC,OAAOjC,EAAAA,EAAAA,IAAK,yCACZM,UAAU,EACV8B,QAASC,EAAAA,EAAAA,OAAAA,qBACThC,SAAKiC,EACLC,aAASD,KAEX,SAACE,EAAA,EAAD,CACER,KAAK,gBACLC,OAAOjC,EAAAA,EAAAA,IAAK,4CACZM,UAAU,KAEZ,iBAAKsB,UAAU,eAAf,WACE,mBACEA,UAAU,iBACVE,QAzDI,WACdW,OAAOC,KAAK1B,GAAe2B,SAAQ,SAACC,GAClC3B,EAAK4B,SAASD,EAAK5B,EAAc4B,GAClC,GACF,EAsDWpD,KAAK,SACLsD,SAAUpB,EAJZ,UAKG1B,EAAAA,EAAAA,IAAK,mBAER,oBACE4B,UAAU,eACVE,QAASb,EAAKU,aAAaJ,GAC3BuB,SAAUpB,EAHZ,WAIE,SAACqB,EAAA,EAAD,CAAYC,QAAStB,KACpB1B,EAAAA,EAAAA,IAAK,4BAOnB,E,iCCzIKiD,EAAY,SAACC,GAAD,OAAWA,EAAMC,aAAalC,IAA9B,EAEZmC,GAAeC,EAAAA,EAAAA,IACnB,CAACJ,IACD,SAACK,GAAD,OAASA,EAAIzC,MAAb,IAoBF,EAPkC,CAChC0C,mBAXwBF,EAAAA,EAAAA,IACxB,CAACJ,IACD,SAACK,GAAD,OAASE,QAAQF,EAAIG,YAArB,IAUAC,mBAPwBL,EAAAA,EAAAA,IACxB,CAACJ,IACD,SAACK,GAAD,OAASE,QAAQF,EAAI5B,YAArB,IAMA0B,aAAAA,EACAH,UAAAA,G,iCCqDF,MAjEA,SAAexC,GACb,OAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOiD,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MAERP,GAAcQ,EAAAA,EAAAA,IAAYC,EAAAA,mBAC1BxC,GAAcuC,EAAAA,EAAAA,IAAYC,EAAAA,mBAC1BrD,GAASoD,EAAAA,EAAAA,IAAYC,EAAAA,cAErBC,EAAYX,QAAQO,EAAMK,OAAO3C,IACjC4C,EAAQF,EACV,mCACA,kCAcJ,OAZAG,EAAAA,EAAAA,YAAU,WACRT,EAASU,EAAAA,EAAAA,OAAeR,EAAMK,OAAO3C,KACrCmC,GAAc,EACf,GAAE,CAACC,EAAUE,EAAMK,OAAO3C,MAUzB,iBAAKG,UAAU,eAAf,WACE,SAAC,KAAD,CAAM4C,GAAG,WAAT,UACE,iBAAK5C,UAAU,SAAf,WACE,cAAGA,UAAU,2BADf,gBAIF,iBAAKA,UAAU,UAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,yBAAK5B,EAAAA,EAAAA,IAAK,yBACV,gBAAK4B,UAAU,yBAEjB,gBAAKA,UAAU,uBAAf,6OAOA,SAAC6C,EAAA,EAAD,WACE,iBAAK7C,UAAU,mBAAf,UACG6B,IAAe,SAACiB,EAAA,EAAD,IACff,IAAeF,IACd,SAAC,EAAD,CACEY,MAAOA,EACP3C,YAAaA,EACbb,OAAQA,EACRsD,UAAWA,EACX5C,SAnCG,SAACE,EAAIkD,GAElBd,EADEM,EACOI,EAAAA,EAAAA,SAAiB9C,EAAIkD,GAErBJ,EAAAA,EAAAA,SAAiBI,GAE7B,EA8BaC,SAAU,kBAAMC,EAAAA,EAAAA,MAAaC,KAAK,iBAAxB,cAQzB,C,+JC4DD,MA/HA,SAAuBrE,GACrB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOsC,EAAP,KAAgB+B,EAAhB,KACMC,GAAQC,EAAAA,EAAAA,UAERC,EAAQ,WACZ,IAAQA,EAAUzE,EAAVyE,MACR,OAAKA,EAGEC,MAAMC,QAAQF,GAASA,EAAQ,CAACA,GAF9B,EAGV,EAeKG,EAAY,yCAAG,WAAOC,GAAP,2FAEXC,EAAQD,EAAME,OAAOD,QAEZA,EAAME,OAJJ,wDAQbC,EAAOH,EAAM,GAEjBI,EAAAA,EAAAA,SAAsBD,EAAM,CAC1BtD,QAAS3B,EAAM2B,QACfG,QAAS9B,EAAM8B,UAEjBwC,GAAW,GAdM,SAeJY,EAAAA,EAAAA,OAAoBD,EAAM,CACrCtD,QAAS3B,EAAM2B,QACfG,QAAS9B,EAAM8B,UAjBA,OAejBmD,EAfiB,OAmBjBV,EAAMY,QAAQV,MAAQ,GACtBH,GAAW,GACXtE,EAAMoF,SAAN,kBAAmBX,KAAnB,CAA4BQ,KArBX,kDAuBjBV,EAAMY,QAAQV,MAAQ,GACtBY,QAAQC,MAAR,MACAhB,GAAW,GACXiB,EAAAA,EAAAA,YAAA,MA1BiB,0DAAH,sDAsCV3F,EAAkBI,EAAlBJ,IAAK4F,EAAaxF,EAAbwF,SAEPC,GACJ,mBACEtE,UAAU,sCACVuE,MAAO,CAAEC,OAAQ,WAFnB,WAGE,iBAAKxE,UAAU,eAAf,UACG,SADH,QACoB,KAClB,SAACmB,EAAA,EAAD,CAAYC,QAASA,EAASqD,UAAU,oBAE1C,kBACEF,MAAO,CAAEG,QAAS,QAClBxD,SAAUE,GAAWiD,EACrBM,OArBU,WACd,IAAQ3G,EAAWa,EAAXb,OACR,GAAIA,GAAUA,EAAO2C,QACnB,OAAO3C,EAAO2C,QAAQiE,KAAI,SAACC,GAAD,iBAAgBA,EAAhB,IAA0BC,KAAK,IAG5D,CAeanE,GACR/C,KAAK,OACLqG,SAAUR,EACVsB,IAAK3B,OAKX,OACE,2BACGiB,GAAa5F,GAzET6E,IAAQsB,KAAI,SAACI,GAAD,MAAW,CAC5BC,IAAKD,EAAKnF,SAAMa,EAChBN,KAAM4E,EAAK5E,KACX8E,OAAQ,OACRC,IAAKH,EAAKI,YAJO,IAyEevB,QAAUpF,EAAO,KAAO6F,EAEvDhB,KAAWA,IAAQO,QAClB,yBACGP,IAAQsB,KAAI,SAACI,GACZ,OACE,iBAAKhF,UAAU,aAAf,WACE,cAAGA,UAAU,iCACb,cACEqF,KAAML,EAAKI,YACXxB,OAAO,SACP0B,IAAI,sBACJC,UAAQ,EAJV,SAKGP,EAAK5E,QAENiE,IACA,mBACErE,UAAU,eACVpC,KAAK,SACLsC,QAAS,kBApFLL,EAoFwBmF,EAAKnF,QAnFjDhB,EAAMoF,SAASX,IAAQkC,QAAO,SAACR,GAAD,OAAUA,EAAKnF,KAAOA,CAAtB,KADX,IAACA,CAoFK,EAHX,UAIE,cAAGG,UAAU,qBAdcgF,EAAKnF,GAmBzC,MAED,OAGT,E,sBCrHD,SAASU,EAAc1B,GACrB,IACEwB,EAQExB,EARFwB,MACAD,EAOEvB,EAPFuB,KACAqF,EAME5G,EANF4G,KACAjF,EAKE3B,EALF2B,QACAG,EAIE9B,EAJF8B,QACAlC,EAGEI,EAHFJ,IACAC,EAEEG,EAFFH,SACAgH,EACE7G,EADF6G,qBAGF,GAMIC,EAAAA,EAAAA,MALFC,EADF,EACEA,SACAC,EAFF,EAEEA,OAFF,IAGEC,UAAaC,EAHf,EAGeA,QAASC,EAHxB,EAGwBA,YACtB/E,EAJF,EAIEA,SACAgF,EALF,EAKEA,OAGFvD,EAAAA,EAAAA,YAAU,WACRkD,EAAS,CAAExF,KAAAA,GACZ,GAAE,CAACwF,EAAUxF,IAEd,IAAM8F,EAAeC,EAAAA,EAAAA,aACnB/F,EACAyF,EACAE,EACAC,EACAN,GAGF,OACE,iBAAK1F,UAAU,aAAf,UACG4B,QAAQvB,KACP,kBACEL,UAAS,yBAAoBtB,EAAW,WAAa,MACrDuB,QAASG,EAFX,SAGGC,KAIL,mBAEA,SAAC,EAAD,CACEG,QAASA,EACTG,QAASA,EACT2C,MAAO2C,EAAM7F,GACb6D,SAAU,SAACX,GACTrC,EAASb,EAAMkD,EAAO,CAAE8C,gBAAgB,EAAMC,aAAa,IAC3DxH,EAAMoF,UAAYpF,EAAMoF,SAASX,EAClC,EACD7E,IAAKA,KAGP,gBAAKuB,UAAU,mBAAf,SAAmCkG,IAClCtE,QAAQ6D,KAAS,kBAAOzF,UAAU,uBAAjB,SAAyCyF,MAGhE,CAEDlF,EAAc+F,aAAe,CAC3B7H,SAAKiC,EACLhC,UAAU,GAeZ,O,qEC/EO,SAASyB,EAActB,GAC5B,IACEwB,EAYExB,EAZFwB,MACAkG,EAWE1H,EAXF0H,YACAnG,EAUEvB,EAVFuB,KACAqF,EASE5G,EATF4G,KACA7H,EAQEiB,EARFjB,KAEA4I,GAME3H,EAPF4H,YAOE5H,EANF2H,WACAlG,EAKEzB,EALFyB,aACA5B,EAIEG,EAJFH,SACAgH,EAGE7G,EAHF6G,qBACAxE,EAEErC,EAFFqC,SACAwF,EACE7H,EADF6H,aAGF,GAIIf,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,OAFF,IAGEC,UAAaC,EAHf,EAGeA,QAASC,EAHxB,EAGwBA,YAGlBE,EAAeC,EAAAA,EAAAA,aACnB/F,EACAyF,EACAE,EACAC,EACAN,GAGF,OACE,iBAAK1F,UAAU,cAAf,WACE,iBAAKA,UAAW0G,EAAe,cAAgB,GAA/C,UACG9E,QAAQvB,KACP,kBAAOL,UAAS,UAAKtB,EAAW,WAAa,MAAQuB,QAASG,EAA9D,SACGC,IAGJkG,GACD,kBACE1G,GAAIO,EACJA,KAAMA,EACNxC,KAAMA,EACNmH,IAAKa,EACL3B,SAAU,SAACP,GACT7E,EAAMoF,UAAYpF,EAAMoF,SAASP,EAAME,OAAON,MAC/C,EACDqD,OAAQ,SAACjD,GACP7E,EAAM8H,QAAU9H,EAAM8H,OAAOjD,EAC9B,EACD8C,UAAWA,QAAa9F,EACxBJ,aAAcA,QAAgBI,EAC9BQ,SAAUA,EACVlB,UAAS,uBAAkBkG,EAAe,aAAe,MAE1DQ,IACC,gBAAK1G,UAAU,qBAAf,UACE,iBAAMA,UAAU,mBAAhB,SAAoC0G,UAI1C,gBAAK1G,UAAU,mBAAf,SAAmCkG,IAClCtE,QAAQ6D,KAAS,kBAAOzF,UAAU,uBAAjB,SAAyCyF,MAGhE,CAEDtF,EAAcmG,aAAe,CAC3B1I,KAAM,OACNc,UAAU,GAoBZ,K,sECzFA,SAASkC,EAAiB/B,GACxB,IACEwB,EASExB,EATFwB,MACAD,EAQEvB,EARFuB,KACAqF,EAOE5G,EAPF4G,KACAmB,EAME/H,EANF+H,KACAH,EAKE5H,EALF4H,YACAD,EAIE3H,EAJF2H,UACAlG,EAGEzB,EAHFyB,aACAoF,EAEE7G,EAFF6G,qBACAhH,EACEG,EADFH,SAGImI,EACJ,CACEC,MAAO,oBACPC,MAAO,qBACPH,IAAS,GAEPI,EACJ,CACEF,MAAO,kBACPC,MAAO,mBACPH,IAAS,GAEb,GAIIjB,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,OAFF,IAGEC,UAAaC,EAHf,EAGeA,QAASC,EAHxB,EAGwBA,YAGlBE,EAAeC,EAAAA,EAAAA,aACnB/F,EACAyF,EACAE,EACAC,EACAN,GAGF,OACE,iBAAK1F,UAAU,gBAAf,UACG4B,QAAQvB,KACP,kBACEL,UAAS,yBACPtB,EAAW,WAAa,KADjB,YAELmI,GACJ5G,QAASG,EAJX,SAKGC,KAGL,qBACER,GAAIO,EACJA,KAAMA,EACN2E,IAAKa,EACL3B,SAAU,SAACP,GACT7E,EAAMoF,UAAYpF,EAAMoF,SAASP,EAAME,OAAON,MAC/C,EACDqD,OAAQ,SAACjD,GACP7E,EAAM8H,QAAU9H,EAAM8H,OAAOjD,EAC9B,EACD+C,YAAaA,QAAe/F,EAC5B8F,UAAWA,QAAa9F,EACxBJ,aAAcA,QAAgBI,EAC9BV,UAAS,uBAAkBgH,EAAlB,YACPd,EAAe,aAAe,OAGlC,gBAAKlG,UAAU,mBAAf,SAAmCkG,IAClCtE,QAAQ6D,KAAS,kBAAOzF,UAAU,uBAAjB,SAAyCyF,MAGhE,CAED7E,EAAiB0F,aAAe,CAC9B5H,UAAU,GAcZ,K","sources":["modules/demandeAppui/demandeAppuiEnumerators.tsx","view/Appui/form/DemandeAppuiForm.tsx","modules/demandeAppui/form/demandeAppuiFormSelectors.tsx","view/Appui/form/AppuiFormPage.tsx","view/shared/uploaders/FilesUploader.tsx","view/shared/form/items/FilesFormItem.tsx","view/shared/form/items/InputFormItem.tsx","view/shared/form/items/TextAreaFormItem.tsx"],"sourcesContent":["const demandeAppuiEnumerators = {\n  type: [\n    'Legal',\n    'logistique',\n  ],\n  etat: [\n    'En_ligne',\n    'physique',\n  ],\n  gouvernorat: [\n    'tunis',\n    'ariana',\n    'gafsa',\n    'kasserine',\n    'monastir',\n    'sousse',\n    'beja',\n  ],\n  importance: [\n    'Haute',\n    'modere',\n    'normale',\n  ],\n};\n\nexport default demandeAppuiEnumerators;\n","import React, { useState } from \"react\";\nimport * as yup from \"yup\";\nimport yupFormSchemas from \"src/modules/shared/yup/yupFormSchemas\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport demandeAppuiEnumerators from \"src/modules/demandeAppui/demandeAppuiEnumerators\";\nimport { i18n } from \"../../../i18n\";\nimport TextAreaFormItem from \"../../shared/form/items/TextAreaFormItem\";\nimport ButtonIcon from \"../../shared/ButtonIcon\";\nimport FilesFormItem from \"src/view/shared/form/items/FilesFormItem\";\nimport Storage from \"src/security/storage\";\nimport InputFormItem from \"src/view/shared/form/items/InputFormItem\";\n\nconst schema = yup.object().shape({\n  gouvernorat: yupFormSchemas.enumerator(\n    i18n(\"entities.demandeAppui.fields.gouvernorat\"),\n    {\n      options: demandeAppuiEnumerators.gouvernorat,\n    }\n  ),\n  phoneNumber: yupFormSchemas.string(i18n(\"user.fields.phoneNumber\"), {\n    matches: /^[0-9]/,\n    max: 8,\n    required: true,\n  }),\n  descriptionFR: yupFormSchemas.string(\n    i18n(\"entities.demandeAppui.fields.description\"),\n    {\n      required: true,\n    }\n  ),\n  supports: yupFormSchemas.files(\n    i18n(\"entities.demandeAppui.fields.supports\"),\n    {}\n  ),\n});\nfunction DemandeAppuiForm(props) {\n  const [activeTab, setActiveTab] = useState(\"physique\");\n\n  const handleTab1 = () => {\n    // update the state to tab1\n    setActiveTab(\"physique\");\n  };\n  const handleTab2 = () => {\n    // update the state to tab1\n    setActiveTab(\"Organisation\");\n  };\n\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n    setActiveTab(record.personne);\n    return {\n      email: record.email,\n      personne: record.personne,\n      phoneNumber: record.phoneNumber,\n      descriptionFR: record.descriptionFR,\n      supports: record.supports || [],\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: \"all\",\n    defaultValues: initialValues as any,\n  });\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const onSubmit = (values) => {\n    values.personne = activeTab;\n    props.onSubmit(props?.record?.id, values);\n  };\n  const { saveLoading } = props;\n\n  return (\n    <FormProvider {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <div className='container__form'>\n          <div className='form__importance'>\n            <label htmlFor='Importance'>Personne</label>\n            <div className='importance__status'>\n              <div\n                className={activeTab === \"physique\" ? \"status__active\" : \"\"}\n                onClick={handleTab1}>\n                physique\n              </div>\n              <div\n                className={activeTab === \"Organisation\" ? \"status__active\" : \"\"}\n                onClick={handleTab2}>\n                Organisation\n              </div>\n            </div>\n          </div>\n          <InputFormItem\n            name='email'\n            label={i18n(\"user.fields.email\")}\n            autoComplete='email'\n          />\n          <InputFormItem\n            name='phoneNumber'\n            label={i18n(\"user.fields.phoneNumber\")}\n            autoComplete='phoneNumber'\n          />\n          <FilesFormItem\n            name='supports'\n            label={i18n(\"entities.demandeAppui.fields.supports\")}\n            required={false}\n            storage={Storage.values.demandeAppuiSupports}\n            max={undefined}\n            formats={undefined}\n          />\n          <TextAreaFormItem\n            name='descriptionFR'\n            label={i18n(\"entities.demandeAppui.fields.description\")}\n            required={false}\n          />\n          <div className='item__button'>\n            <button\n              className='cancel__button'\n              onClick={onReset}\n              type='button'\n              disabled={saveLoading}>\n              {i18n(\"common.reset\")}\n            </button>\n            <button\n              className='form__button'\n              onClick={form.handleSubmit(onSubmit)}\n              disabled={saveLoading}>\n              <ButtonIcon loading={saveLoading} />\n              {i18n(\"common.save\")}\n            </button>\n          </div>\n        </div>\n      </form>\n    </FormProvider>\n  );\n}\n\nexport default DemandeAppuiForm;\n","import { createSelector } from 'reselect';\n\nconst selectRaw = (state) => state.demandeAppui.form;\n\nconst selectRecord = createSelector(\n  [selectRaw],\n  (raw) => raw.record,\n);\n\nconst selectInitLoading = createSelector(\n  [selectRaw],\n  (raw) => Boolean(raw.initLoading),\n);\n\nconst selectSaveLoading = createSelector(\n  [selectRaw],\n  (raw) => Boolean(raw.saveLoading),\n);\n\nconst demandeAppuiFormSelectors = {\n  selectInitLoading,\n  selectSaveLoading,\n  selectRecord,\n  selectRaw,\n};\n\nexport default demandeAppuiFormSelectors;","import React, { useEffect, useState } from \"react\";\nimport FormWrapper from \"../../shared/styles/FormWrapper\";\nimport { Link } from \"react-router-dom\";\nimport DemandeAppuiForm from \"./DemandeAppuiForm\";\nimport actions from \"src/modules/demandeAppui/form/demandeAppuiFormActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport selectors from \"src/modules/demandeAppui/form/demandeAppuiFormSelectors\";\nimport { getHistory } from \"src/modules/store\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport Spinner from \"../../shared/Spinner\";\nimport { i18n } from \"../../../i18n\";\nfunction Appui(props) {\n  const [dispatched, setDispatched] = useState(false);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n\n  const initLoading = useSelector(selectors.selectInitLoading);\n  const saveLoading = useSelector(selectors.selectSaveLoading);\n  const record = useSelector(selectors.selectRecord);\n\n  const isEditing = Boolean(match.params.id);\n  const title = isEditing\n    ? \"entities.demandeAppui.edit.title\"\n    : \"entities.demandeAppui.new.title\";\n\n  useEffect(() => {\n    dispatch(actions.doInit(match.params.id));\n    setDispatched(true);\n  }, [dispatch, match.params.id]);\n\n  const doSubmit = (id, data) => {\n    if (isEditing) {\n      dispatch(actions.doUpdate(id, data));\n    } else {\n      dispatch(actions.doCreate(data));\n    }\n  };\n  return (\n    <div className='app__contenu'>\n      <Link to='/profile'>\n        <div className='retour'>\n          <i className='fa-solid fa-arrow-left'></i> Retour\n        </div>\n      </Link>\n      <div className='contenu'>\n        <div className='archieve__header'>\n          <h2>{i18n(\"menu.demande_appui\")}</h2>\n          <div className='communiquer__bar'></div>\n        </div>\n        <div className='contenu__description'>\n          Description lorem ipsum dolor sit amet, consectetur adipiscing elit.\n          Nam cursus eros metus, sit amet scelerisque odio posuere eu. Sed vitae\n          pharetra lacus. Class aptent taciti sociosqu ad litora torquent per\n          conubia nostra\n        </div>\n\n        <FormWrapper>\n          <div className='Login__container'>\n            {initLoading && <Spinner />}\n            {dispatched && !initLoading && (\n              <DemandeAppuiForm\n                title={title}\n                saveLoading={saveLoading}\n                record={record}\n                isEditing={isEditing}\n                onSubmit={doSubmit}\n                onCancel={() => getHistory().push(\"/demande-appui\")}\n              />\n            )}\n          </div>\n        </FormWrapper>\n      </div>\n    </div>\n  );\n}\n\nexport default Appui;\n","import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FileUploader from \"src/modules/shared/fileupload/fileUploader\";\nimport Errors from \"src/modules/shared/error/errors\";\nimport { i18n } from \"src/i18n\";\nimport ButtonIcon from \"src/view/shared/ButtonIcon\";\n\nfunction FilesUploader(props) {\n  const [loading, setLoading] = useState(false);\n  const input = useRef<any>();\n\n  const value = () => {\n    const { value } = props;\n    if (!value) {\n      return [];\n    }\n    return Array.isArray(value) ? value : [value];\n  };\n\n  const fileList = () => {\n    return value().map((item) => ({\n      uid: item.id || undefined,\n      name: item.name,\n      status: \"done\",\n      url: item.downloadUrl,\n    }));\n  };\n\n  const handleRemove = (id) => {\n    props.onChange(value().filter((item) => item.id !== id));\n  };\n\n  const handleChange = async (event) => {\n    try {\n      const files = event.target.files;\n\n      if (!files || !files.length) {\n        return;\n      }\n\n      let file = files[0];\n\n      FileUploader.validate(file, {\n        storage: props.storage,\n        formats: props.formats,\n      });\n      setLoading(true);\n      file = await FileUploader.upload(file, {\n        storage: props.storage,\n        formats: props.formats,\n      });\n      input.current.value = \"\";\n      setLoading(false);\n      props.onChange([...value(), file]);\n    } catch (error) {\n      input.current.value = \"\";\n      console.error(error);\n      setLoading(false);\n      Errors.showMessage(error);\n    }\n  };\n\n  const formats = () => {\n    const { schema } = props;\n    if (schema && schema.formats) {\n      return schema.formats.map((format) => `.${format}`).join(\",\");\n    }\n    return undefined;\n  };\n\n  const { max, readonly } = props;\n\n  const uploadButton = (\n    <label\n      className='btn btn-outline-secondary px-4 mb-2'\n      style={{ cursor: \"pointer\" }}>\n      <div className='upload__file'>\n        {\"upload\"} &nbsp;{\" \"}\n        <ButtonIcon loading={loading} iconClass='fas fa-plus' />\n      </div>\n      <input\n        style={{ display: \"none\" }}\n        disabled={loading || readonly}\n        accept={formats()}\n        type='file'\n        onChange={handleChange}\n        ref={input}\n      />\n    </label>\n  );\n\n  return (\n    <div>\n      {readonly || (max && fileList().length >= max) ? null : uploadButton}\n\n      {value() && value().length ? (\n        <div>\n          {value().map((item) => {\n            return (\n              <div className='file__show' key={item.id}>\n                <i className='fas fa-link text-muted mr-2'></i>\n                <a\n                  href={item.downloadUrl}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  download>\n                  {item.name}\n                </a>\n                {!readonly && (\n                  <button\n                    className='btn btn-link'\n                    type='button'\n                    onClick={() => handleRemove(item.id)}>\n                    <i className='fas fa-times'></i>\n                  </button>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nFilesUploader.propTypes = {\n  readonly: PropTypes.bool,\n  max: PropTypes.number,\n  formats: PropTypes.arrayOf(PropTypes.string),\n  storage: PropTypes.object,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\nexport default FilesUploader;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport FilesUploader from \"src/view/shared/uploaders/FilesUploader\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\n\nfunction FilesFormItem(props) {\n  const {\n    label,\n    name,\n    hint,\n    storage,\n    formats,\n    max,\n    required,\n    externalErrorMessage,\n  } = props;\n\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n    setValue,\n    watch,\n  } = useFormContext();\n\n  useEffect(() => {\n    register({ name });\n  }, [register, name]);\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  return (\n    <div className='form-group'>\n      {Boolean(label) && (\n        <label\n          className={`col-form-label ${required ? \"required\" : null}`}\n          htmlFor={name}>\n          {label}\n        </label>\n      )}\n\n      <br />\n\n      <FilesUploader\n        storage={storage}\n        formats={formats}\n        value={watch(name)}\n        onChange={(value) => {\n          setValue(name, value, { shouldValidate: true, shouldDirty: true });\n          props.onChange && props.onChange(value);\n        }}\n        max={max}\n      />\n\n      <div className='invalid-feedback'>{errorMessage}</div>\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\n    </div>\n  );\n}\n\nFilesFormItem.defaultProps = {\n  max: undefined,\n  required: false,\n};\n\nFilesFormItem.propTypes = {\n  storage: PropTypes.object.isRequired,\n  formats: PropTypes.any,\n\n  required: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  formItemProps: PropTypes.object,\n  max: PropTypes.number,\n};\n\nexport default FilesFormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\n\nexport function InputFormItem(props) {\n  const {\n    label,\n    description,\n    name,\n    hint,\n    type,\n    placeholder,\n    autoFocus,\n    autoComplete,\n    required,\n    externalErrorMessage,\n    disabled,\n    endAdornment,\n  } = props;\n\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n  } = useFormContext();\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  return (\n    <div className='form__group'>\n      <div className={endAdornment ? \"input-group\" : \"\"}>\n        {Boolean(label) && (\n          <label className={`${required ? \"required\" : null}`} htmlFor={name}>\n            {label}\n          </label>\n        )}\n        {description}\n        <input\n          id={name}\n          name={name}\n          type={type}\n          ref={register}\n          onChange={(event) => {\n            props.onChange && props.onChange(event.target.value);\n          }}\n          onBlur={(event) => {\n            props.onBlur && props.onBlur(event);\n          }}\n          autoFocus={autoFocus || undefined}\n          autoComplete={autoComplete || undefined}\n          disabled={disabled}\n          className={`form-control ${errorMessage ? \"is-invalid\" : \"\"}`}\n        />\n        {endAdornment && (\n          <div className='input-group-append'>\n            <span className='input-group-text'>{endAdornment}</span>\n          </div>\n        )}\n      </div>\n      <div className='invalid-feedback'>{errorMessage}</div>\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\n    </div>\n  );\n}\n\nInputFormItem.defaultProps = {\n  type: \"text\",\n  required: false,\n};\n\nInputFormItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  description: PropTypes.string,\n  hint: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  disabled: PropTypes.bool,\n  prefix: PropTypes.string,\n  placeholder: PropTypes.string,\n  autoComplete: PropTypes.string,\n  externalErrorMessage: PropTypes.string,\n  endAdornment: PropTypes.any,\n  onChange: PropTypes.any,\n};\n\nexport default InputFormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\n\nfunction TextAreaFormItem(props) {\n  const {\n    label,\n    name,\n    hint,\n    size,\n    placeholder,\n    autoFocus,\n    autoComplete,\n    externalErrorMessage,\n    required,\n  } = props;\n\n  const sizeLabelClassName =\n    {\n      small: \"col-form-label-sm\",\n      large: \"col-form-label-lg\",\n    }[size] || \"\";\n\n  const sizeInputClassName =\n    {\n      small: \"form-control-sm\",\n      large: \"form-control-lg\",\n    }[size] || \"\";\n\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n  } = useFormContext();\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  return (\n    <div className='form_textarea'>\n      {Boolean(label) && (\n        <label\n          className={`col-form-label ${\n            required ? \"required\" : null\n          } ${sizeLabelClassName}`}\n          htmlFor={name}>\n          {label}\n        </label>\n      )}\n      <textarea\n        id={name}\n        name={name}\n        ref={register}\n        onChange={(event) => {\n          props.onChange && props.onChange(event.target.value);\n        }}\n        onBlur={(event) => {\n          props.onBlur && props.onBlur(event);\n        }}\n        placeholder={placeholder || undefined}\n        autoFocus={autoFocus || undefined}\n        autoComplete={autoComplete || undefined}\n        className={`form-control ${sizeInputClassName} ${\n          errorMessage ? \"is-invalid\" : \"\"\n        }`}\n      />\n      <div className='invalid-feedback'>{errorMessage}</div>\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\n    </div>\n  );\n}\n\nTextAreaFormItem.defaultProps = {\n  required: false,\n};\n\nTextAreaFormItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  prefix: PropTypes.string,\n  placeholder: PropTypes.string,\n  externalErrorMessage: PropTypes.string,\n};\n\nexport default TextAreaFormItem;\n"],"names":["type","etat","gouvernorat","importance","schema","yup","shape","yupFormSchemas","i18n","options","demandeAppuiEnumerators","phoneNumber","matches","max","required","descriptionFR","supports","props","useState","activeTab","setActiveTab","record","personne","email","initialValues","form","useForm","resolver","yupResolver","mode","defaultValues","onSubmit","values","id","saveLoading","handleSubmit","className","htmlFor","onClick","InputFormItem","name","label","autoComplete","FilesFormItem","storage","Storage","undefined","formats","TextAreaFormItem","Object","keys","forEach","key","setValue","disabled","ButtonIcon","loading","selectRaw","state","demandeAppui","selectRecord","createSelector","raw","selectInitLoading","Boolean","initLoading","selectSaveLoading","dispatched","setDispatched","dispatch","useDispatch","match","useRouteMatch","useSelector","selectors","isEditing","params","title","useEffect","actions","to","FormWrapper","Spinner","data","onCancel","getHistory","push","setLoading","input","useRef","value","Array","isArray","handleChange","event","files","target","length","file","FileUploader","current","onChange","console","error","Errors","readonly","uploadButton","style","cursor","iconClass","display","accept","map","format","join","ref","item","uid","status","url","downloadUrl","href","rel","download","filter","hint","externalErrorMessage","useFormContext","register","errors","formState","touched","isSubmitted","watch","errorMessage","FormErrors","shouldValidate","shouldDirty","defaultProps","description","autoFocus","placeholder","endAdornment","onBlur","size","sizeLabelClassName","small","large","sizeInputClassName"],"sourceRoot":""}