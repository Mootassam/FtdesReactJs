{"version":3,"file":"static/js/7197.4055868a.chunk.js","mappings":"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","sources":["modules/mediatheque/MediathequeService.tsx","view/Médiathèque/shared/SectionHeader.tsx","modules/Tenant/TenantService.tsx","view/Médiathèque/show-one/Header.tsx","view/Médiathèque/show-one/Main.tsx","view/Médiathèque/show-one/Footer.tsx","view/Médiathèque/show-one/RelatedContent.tsx","view/Médiathèque/show-one/showDetails.tsx","view/shared/BreadCrumbs.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\nimport moment from 'moment';\n\nexport default class MediathequeService {\n    // A LA UNE (latest 10)\n    static async getLatestMediatheques() {\n        // const tenantId = AuthCurrentTenant.get();\n        const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}/mediatique/`);\n        return response.data;\n    }\n\n    static async getMediathequesBasedOnType(extension) {\n        // const tenantId = AuthCurrentTenant.get();\n        const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}/mediatique/${extension}`);\n        return response.data;\n    }\n\n    static async getOneMediatheque(id) {\n        // const tenantId = AuthCurrentTenant.get();\n        const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}/mediatique/${id}`);\n        return response.data;\n    }\n\n\n    // HELPER METHODS\n    static pipeDate(date) {\n        let d = date.split('T')[0];\n        return moment(d).format('LL');\n    };\n    static getDate(d) {\n        return (d?.split('T')[0]);\n    }\n    static getTime(d) {\n        return (d?.split('T')[1]);\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport default function SectionHeader({ title }) {\n    return (\n        <HeaderLayout>\n            <header>\n                <span>{title}</span>\n            </header>\n        </HeaderLayout>\n    )\n}\n\nconst HeaderLayout = styled.div`\n    header{\n        width: 100%;\n        margin-bottom: 1rem;\n\n        span{\n            font-size: 2.5rem;\n            text-transform: uppercase;\n            font-family: 'Bebas Neue Pro';\n            line-height: .5;\n            padding: 0;\n\n            display: flex;\n            flex-direction: row;\n            align-items: flex-end;\n            justify-content: space-between;\n\n            &:after{\n                content: '';\n                display: inline-block;\n                height: 1px;\n                flex-grow: 1;\n                background-color: red;\n            }\n        }\n    }\n\n`;","import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\n\nexport default class TenantService {\n    static async getTenant(id) {\n        // const tenantId = AuthCurrentTenant.get();\n        const tenantId = '6315dbfd1241d0001e764e26';\n        const response = await authAxios.get(`/tenant/${tenantId}`);\n        return response.data;\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport MediathequeService from 'src/modules/mediatheque/MediathequeService'\n// ICONS\nimport { BsFacebook, BsTwitter, BsInstagram, BsLinkedin } from 'react-icons/bs'\n\nexport default function Header({ entity, user, userIsLoading }) {\n    return (\n        <HeaderLayout>\n            <span className=\"categoryBadge\">{entity['type']}</span>\n            <h1>{entity['titleFR']}</h1>\n            <div className=\"data\">\n                <div className=\"dateAndOwner\">\n                    <span>Publié le {MediathequeService.getDate(entity['createdAt'])} à {MediathequeService.getTime(entity['createdAt'])}</span>\n                    <span>\n                        Par&nbsp;\n                        {\n                            userIsLoading\n                                ?\n                                <span>loading...</span>\n                                :\n                                <strong>{user['name']}</strong>\n                        }\n                    </span>\n                </div>\n                <div className=\"socials\">\n                    <span>Partager :</span>\n                    <button><BsFacebook /></button>\n                    <button><BsTwitter /></button>\n                    <button><BsInstagram /></button>\n                    <button><BsLinkedin /></button>\n                </div>\n            </div>\n        </HeaderLayout>\n    )\n}\n\n\nconst HeaderLayout = styled.section`\n    .categoryBadge{\n        background: #f8d7da;\n        border-radius: 3px;\n        color: var(--dark--red);\n        padding: .4rem .5rem;\n        font-size: 12px;\n        font-family: 'Proxima Nova';\n    }\n\n    h1{\n        font-family: 'Bebas Neue Pro';\n        font-style: normal;\n        font-weight: 700;\n        font-size: 40px;\n        line-height: 43px;\n        text-transform: uppercase;\n        color: var(--violet);\n        margin: 1rem 0;\n    }\n\n    @media (max-width: 767px){\n        width: 100%;\n        padding: 0 .5rem;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components'\n// HELPER PACKAGES\nimport ReactPlayer from 'react-player/lazy'\nimport Photogrid from \"react-facebook-photo-grid\";\n\n\nexport default function Main({ entity, data }) {\n    return (\n        <MainLayout>\n            {\n                (entity['videos']?.length > 0) &&\n                <VideoPlayersLayout>\n                    {\n                        entity['videos'].map(vid => {\n                            return (\n                                <ReactPlayer\n                                    key={vid._id}\n                                    url={vid['downloadUrl']}\n                                    loop={true}\n                                    controls={true}\n                                    className='hiThereMotherFucker'\n                                />\n                            )\n                        })\n                    }\n                </VideoPlayersLayout>\n            }\n            <p>{entity['descriptionFR']}</p>\n            {/* RENDERING IMAGES (if there are any) */}\n            {\n                (entity['photos']?.length > 0) &&\n                <PhotoPlayersLayout>\n                    <section className=\"gridSection\">\n                        {\n                            <Photogrid\n                                images={data}\n                                maxWidth='100%'\n                                key={0}\n                            ></Photogrid>\n                        }\n                    </section>\n                </PhotoPlayersLayout>\n            }\n        </MainLayout>\n    )\n}\n\nconst MainLayout = styled.section`\n    margin: 2rem 0;\n    p{\n        text-align: justify;\n        color: var(--gray2);\n        font-family: 'Proxima Nova';\n        font-style: normal;\n        font-weight: 700;\n        font-size: 16px;\n        line-height: 25px;\n    }\n\n    @media (max-width: 767px){\n        width: 100%;\n        padding: 0 .5rem;\n    }\n`;\nconst VideoPlayersLayout = styled.section`\n    margin: 3rem 0;\n    audio{\n        height: 70px !important;\n    }\n\n    @media (max-width: 767px){\n        video{\n            width: 90% !important;\n        }\n    }\n`;\nconst PhotoPlayersLayout = styled.section`\n    margin-top: 1rem;\n\n    .gridSection{\n        width: 100%;\n        display: block;\n        &:before{\n            content: '( Double click to open a photo )';\n            display: block;\n            font-family: 'Proxima Nova';\n            font-style: normal;\n            font-size: 1rem;\n            margin-bottom: 1rem;\n        }\n    }\n\n    img{\n        width: 100%;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components'\n\n// ICONS\nimport { BsFacebook, BsTwitter, BsInstagram, BsLinkedin } from 'react-icons/bs'\n\nexport default function FooterSection({ userIsLoading, user }) {\n    return (\n        <FooterLayout>\n            <div className=\"data\">\n                <div className=\"socials\">\n                    <span>Partager :</span>\n                    <button><BsFacebook /></button>\n                    <button><BsTwitter /></button>\n                    <button><BsInstagram /></button>\n                    <button><BsLinkedin /></button>\n                </div>\n            </div>\n        </FooterLayout>\n    )\n}\n\nconst FooterLayout = styled.section`\n    margin-top: 5rem;\n\n    @media (max-width: 767px){\n        width: 100%;\n        padding: 0 .5rem;\n    }\n`;","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom';\n// SERVICES\nimport MediathequeService from 'src/modules/mediatheque/MediathequeService';\n// COMPONENTSS\nimport SectionHeader from '../shared/SectionHeader';\n\n\nexport default function RelatedContent({ type }) {\n\n    // Fetching related entities based on type\n    const [related, setRelated] = useState<any[]>([]);\n    const [entityIsLoading, setEntityIsLoading] = useState(true);\n\n    const fetchRelatedContent = type => {\n        const routeExtension = `?filter[type]=${type}`;\n        MediathequeService.getMediathequesBasedOnType(routeExtension)\n            .then((value) => {\n\n                value.rows?.map(entry => {\n                    setRelated(related => related.concat(entry));\n                });\n                setEntityIsLoading(false);\n            });\n    }\n    useEffect(() => { fetchRelatedContent(type) }, [type]);\n\n\n    return (\n        <RelatedCOntentLayout>\n            <SectionHeader title='publications qui peuvent vous intéresser' />\n            {\n                entityIsLoading\n                    ?\n                    <section>\n                        <h4>Loading related content...</h4>\n                    </section>\n                    :\n                    <div className=\"gridLayout\">\n\n                        {\n                            related?.map(entity => {\n                                return (\n                                    <HorizontalCard key={entity['_id']}>\n                                        {\n                                            (entity['photos'].length > 0)\n                                                ?\n                                                <div className=\"cardImage cardThumbnail\" style={{ backgroundImage: \"url(\" + entity['photos'][0].downloadUrl + \")\" }} >\n                                                </div>\n                                                :\n                                                <div className=\"cardImage cardThumbnail hasNoThumbnail\">\n                                                </div>\n                                        }\n                                        <div className=\"cardContent\">\n                                            <div className=\"cardHeader\">\n                                                <span className=\"categoryBadge\">{entity['type']}</span>\n                                                <span>{MediathequeService.pipeDate(entity['createdAt'])}</span>\n                                            </div>\n                                            <Link to={'/Mediatheque/entity/' + entity['_id']} className=\"title\">\n                                                <span>{entity['titleFR']}</span>\n                                            </Link>\n                                        </div>\n                                    </HorizontalCard>\n                                )\n                            })\n                        }\n                    </div>\n            }\n        </RelatedCOntentLayout>\n    )\n}\n\n// S T Y L E S\nconst RelatedCOntentLayout = styled.section`\n    margin: 5rem 0;\n    width: 100%;\n\n    .gridLayout{\n        margin-top: 2rem;\n        width: 100%;\n        display: grid;\n        grid-gap: 1rem;\n        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n    }\n\n\n    @media (max-width: 767px){\n        width: 100%;\n        padding: 0 .5rem;\n    }\n`;\n\nconst HorizontalCard = styled.div`\n    height: 200px;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n\n    /* LEFT SECTION */\n    .cardThumbnail{\n        width: 100%;\n        height: 200px;\n        background-size: cover;\n        background-position: center;\n        position: relative;\n    }\n    .hasNoThumbnail{\n        background-image: url('https://imgur.com/N1ZiTM4.jpeg');\n    }\n    .cardImage{\n        width: 200px;\n        min-width: 200px !important;\n        height: 100%;\n        overflow: hidden;\n    }\n\n    /* LEFT SECTION */\n    .cardContent{\n        flex-grow: 1;\n        height: 100%;\n        padding-left: 1rem;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n\n        .cardHeader{\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n            font-size: 12px;\n            font-family: 'Proxima Nova';\n\n            .categoryBadge{\n                background: #f8d7da;\n                border-radius: 3px;\n                color: var(--dark--red);\n                padding: .4rem .5rem;\n                font-size: 12px;\n                font-family: 'Proxima Nova';\n            }\n        }\n\n        .title{\n            margin-top: 1.5rem;\n            color: var(--violet);\n\n            span{\n                font-family: 'Bebas Neue Pro';\n                font-style: normal;\n                font-weight: 700;\n                font-size: 23px;\n                line-height: 24px;\n            }\n        }\n    }\n`;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// SERVICES\nimport MediathequeService from \"src/modules/mediatheque/MediathequeService\";\nimport TenantService from \"src/modules/Tenant/TenantService\";\n// COMPONENTS\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport BreadCrumbs from \"src/view/shared/BreadCrumbs\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport FooterSection from \"./Footer\";\nimport RelatedContent from \"./RelatedContent\";\n\nexport default function ShowPublication() {\n  // GET entity id\n  const params = useParams();\n  let entityID = params.entity_id;\n\n  // FETCH DETAILS OF THAT ONE ENETITY\n  const [entity, setEntity] = useState({});\n  const [entityIsLoading, setEntityIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [user, setUser] = useState({});\n  const [userIsLoading, setUserIsLoading] = useState(true);\n\n  const fetchTypeEntitYDetails = (entityID) => {\n    MediathequeService.getOneMediatheque(entityID).then((value) => {\n      setEntity((entity) => ({ ...entity, ...value }));\n      setEntityIsLoading(false);\n\n      // loadig photos to be used in the grid\n      value.photos?.map((p) => {\n        setData((data) => data.concat(p.downloadUrl));\n      });\n\n      // fetching user's data once entity is loaded\n      TenantService.getTenant(value.tenant).then((userDetails) => {\n        setUser((user) => ({ ...user, ...userDetails }));\n        setUserIsLoading(false);\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchTypeEntitYDetails(entityID);\n  }, []);\n\n  return (\n    <section>\n      <section className='wideContent'>\n        <BreadCrumbs view='Médiathéque' />\n        <MainLayout>\n          <section className='rightSection'>\n            <Header entity={entity} user={user} userIsLoading={userIsLoading} />\n            {entityIsLoading ? (\n              <Skeleton height={500} />\n            ) : (\n              <Main entity={entity} data={data} />\n            )}\n            <FooterSection userIsLoading={userIsLoading} user={user} />\n          </section>\n        </MainLayout>\n        <RelatedContent type={entity[\"type\"]} />\n      </section>\n    </section>\n  );\n}\n\n// =========== STYLES ===========\nconst MainLayout = styled.section`\n  width: var(--cerntered-content);\n  height: auto;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin: 1rem auto;\n\n    .rightSection{\n        width: 100%;\n        /* margin-right: 2.5rem; */\n\n        .socials{\n            width: 250px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n      button {\n        background-color: transparent;\n        border-radius: 50%;\n        color: var(--violet);\n        font-size: 1.8rem;\n      }\n    }\n\n    @media (max-width: 767px){\n        width: 100%; \n    }\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport default function BreadCrumbs({ view }) {\n\n    const capitalize = text => {\n        return text.charAt(0).toUpperCase() + text.slice(1)\n    }\n\n    return (\n        <div>\n            {/* BREADCRUMBS */}\n            <BreadCrumbsHeader>\n                <Link to='/' className=\"homeLinkInBC\">Accueil</Link> <span className=\"currentView\">/ {capitalize(view)}</span>\n            </BreadCrumbsHeader>\n        </div>\n    )\n}\n\nconst BreadCrumbsHeader = styled.div`\n    margin: .7rem 0;\n    font-size: '1rem';\n    font-family: \"Proxima Nova\";\n\n    .currentView{\n        color: var(--gray3);\n    }\n\n    .homeLinkInBC{\n        text-decoration: none;\n        color: var(--gray2);\n        \n        &:hover{\n            text-decoration: underline;\n        }\n    }\n`\n"],"names":["MediathequeService","authAxios","response","data","extension","id","date","d","split","moment","format","SectionHeader","title","HeaderLayout","styled","TenantService","Header","entity","user","userIsLoading","className","Main","MainLayout","length","VideoPlayersLayout","map","vid","url","loop","controls","_id","PhotoPlayersLayout","images","maxWidth","FooterSection","FooterLayout","RelatedContent","type","useState","related","setRelated","entityIsLoading","setEntityIsLoading","useEffect","routeExtension","then","value","rows","entry","concat","fetchRelatedContent","RelatedCOntentLayout","HorizontalCard","style","backgroundImage","downloadUrl","to","ShowPublication","entityID","useParams","entity_id","setEntity","setData","setUser","setUserIsLoading","photos","p","getTenant","tenant","userDetails","fetchTypeEntitYDetails","BreadCrumbs","view","height","text","BreadCrumbsHeader","charAt","toUpperCase","slice"],"sourceRoot":""}